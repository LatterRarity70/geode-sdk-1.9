# Update the loader version on the Index
name: Upload release info

on:
  # trigger when a new release is released
  release:
    types:
      - published

jobs:
  publish:
    name: Upload release info
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate release data
        id: release-data
        shell: python
        run: |
          import sys
          import json
          import os

          platform_info = {
            "win": None,
            "android": None,
            "mac": None,
          }

          in_parse_section = False
          with open("${{ github.workspace }}/CMakeLists.txt", "r") as f:
            for line in f:
              if in_parse_section:
                [platform, version] = [x.strip() for x in line.removeprefix("#").split(":")]
                if platform in platform_info:
                  platform_info[platform] = version
                else:
                  print(f"WARNING: unknown platform {platform} with version {version}")

              elif line == "# begin GEODE_GD_VERSION":
                in_parse_section = True

              elif line == "# end GEODE_GD_VERSION":
                in_parse_section = False
                break

          for k, v in platform_info.items():
            if not v:
              print(f"WARNING: missing version for platform {k}")
            else:
              print(f"{k}: {v}")

          env_file = os.getenv("GITHUB_OUTPUT")
          with open(env_file, "a") as gh_env:
            data = json.dumps(platform_info)
            gh_env.write(f"PLATFORM_INFO<<EOF\n{data}\nEOF\n")

          print("Success!")

      - name: Create release
        shell: bash
        run: |
          CODE=`curl -d '{"prerelease": ${{ github.event.release.prerelease }}, "commit_hash": "${{ github.sha }}", "tag": ${{ github.event.release.tag_name }}, "gd": ${{ steps.release-data.outputs.PLATFORM_INFO }}}' \
            --write-out "%{http_code}" \
            --silent \
            --output /dev/null \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.GEODE_INDEX_TOKEN }}" \
            "https://api.geode-sdk.org/v1/loader/versions"`

          if [ $CODE != "204" ]
          then
            echo "Request failed with response $CODE"
            exit 1
          fi
